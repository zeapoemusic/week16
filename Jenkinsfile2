pipeline {
    agent any
    tools{
        maven 'M2_HOME'
    }
    stages{
            stage('build && SonarQube analysis') {
            steps {
                withSonarQubeEnv('sonarserver') {
                    // Optionally use a Maven environment you've configured already
                   // withMaven(maven:'Maven 3.5') {
                      //  sh 'mvn clean package sonar:sonar'
                    }
                }
            }
        stage('maven commands'){
            steps{
                sh 'mvn clean compile install package'
            }
        }
        stage('upload artifact'){
            steps{
                sh 'curl -uadmin:AP5mZ1TGxbfJg5s8o7m1rRSRP4i -T \
                target/bio*.jar \
                "http://100.25.29.230:8081/artifactory/userstories-repo/"'
            }
        }
        stage('image build'){
            steps{
                sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 820659945986.dkr.ecr.us-east-1.amazonaws.com'
                sh 'docker build -t geoapp .'
            }
        }
        stage('push image'){
            steps{
                sh 'docker tag geoapp:latest 820659945986.dkr.ecr.us-east-1.amazonaws.com/geoapp:latest'
                sh 'docker push 820659945986.dkr.ecr.us-east-1.amazonaws.com/geoapp:latest'
            }
        }
        }
}